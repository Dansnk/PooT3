Diseño y Programación Orientados a Objetos
1er. Sem 2014
Tarea 3: Applet para Simulación Bolas, Puntos fijos, Resortes y Osciladores como Objetos de Software

Instalación de Java en su ordenador:
===================================
Entrar en el siguiente link, descargar la versión que le corresponda y leer las instrucciiones que proporciona la misma página:
https://www.java.com/es/download/manual.jsp?locale=es
En caso que el link no esté disponible, ustede debe entrar en el siguiente sitio web y leer buscar la descarga que le corresponda a su sistema operativo.
http://www.java.com/
===============================================================

1.- Integrantes:
    ============

	Matias Lacasia
	Carlos Polanco
	Daniel Veas

2.- Carpetas:
	========
	
	A continuación se detalla como estan compuestos los archivos de la tarea: 
	
	Tarea 3 POO\
		Tarea\
			Ball.java \
			BallView.java \
			FixedHook.java \
			FixedHookView.java \
			Graphview.java \
			LabMenuListener.java \
			MouseListener.java \
			MyWorld.java \
			MyWorldView.java \
			NextKeyListener.java \
			Oscillator.java \
			OscillatorView.java \
			PhysicsElement.java \
			PhysicsLab.java \
			PhysicsLabApplet.java \
			Simulateable.java \
			Spring.java \:
			SpringView.java \
			SpringAttachable.java \
			makefile
		README
		Documentacion.pdf
		
	A continuación se explicará cada uno:
	
		Ball.java: Clase que crea las bolas que se usaran en MyWorld
		BallView.java: Clase que crea la vista y parte grafica del las Bolas
		FixedHook.java: Clase que crea los puntos fijos que se usaran en MyWorld
		FixedHookView.java: Clase que crea la vista y parte grafica de los puntos fijos.
		Graphview.java: Clase que muestra y genera los graficos a trabajar.
		Spring.java: Clase que crea los resortes que se usaran en MyWorld.
		SpringView.java: Class que crea la vista y parte grafica de los resortes.
		MyWorld.java: Clase que crea el mundo donde se simulan todos los elementos fisicos.
		MyWorldView.java: Clase que crea la vista y part grafica de MyWorld y los elementos fisicos.
		NextKeyListener:Clase que implementa el evento para apretar la tecla N.
		PhysicsElements.java: Clase abstracta que se usa para poder extenderla a los distintos elementos con que se trabaja.
		LabMenuListener.java: Clase que implementa el Menu con los diferentes eventos.
		MouseListener.java: Clase que implementa el Mouse con los diferentes eventos.
		PhysicsLab.java: Clase principal con el main, donde se juntan los codigos para generar la simulacion.
		PhysicsLabApplet.java: Clase que genera el Applet con el que se verá el programa en el HTML.
		Oscillator.java: Clase que crea los osciladores que se usaran en MyWorld
		OscillatorView.java: Clase que crea la vista y parte grafica del los osciladores
		Simulateable.java: Interfaz que debe ser implementada en los elementos que interactuan y cambian sus estados.
		SpringAttachable.java: Interfaz que debe implementarse a todos los elementos que se unen con un Spring.
		makefile: Archivo que sirve para compilar y correr el programa de forma comoda y rapida.
		README: Archivo de Texto que contiene cosas importantes y necesarias antes de correr el codigo.
		Documentacion: Archivo de Texto que posee el diagrama de flujo y los problemas generados en el proceso.

3.- Otros:
	=====
	
	Para poder compilar y ejecutar los archivos presentados en esta tarea es necesario tener instalado una versión reciente de 
	Java Development Kit (JDK 1.7)
	
4.- Compilacion y ejecucion:
    ========================
	
	Para compilar todos los archivos .java, en la de la carpeta de la etapa correspondiente se debe ejecutar el siguiente comando por terminal:
	$make
	
	Desde el makefile se puede ejecutar el prousando: 
	$make run
	El cual hace uso del makefile, compilando y ejecutando el programa
	
	Desde el makefile se puede probar el Applet usando Appletviewer usando:
	$make runApplet
	
	Existe otra forma que es ingresando los siguientes comandos por terminal:
	$javac PhysicsLab.java // compilacion
	$java PhysicsLab // ejecucion
	
	Para la generacion de los correspondientes jar se puede usar el comando:
	$make jar
	

6.- Resultados:
   ===========

	El resultado al ejecutar este programa se mostrara una interfaz grafica en donde podremos escoger los elementos desde un menu, 
	y con el puntero del mouse y presionando el boton primario de este, podremos mover los objetos y engancharlos a los springs


